# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers
#         environment:
#           MYSQL_ALLOW_EMPTY_PASSWORD: yes
#           MYSQL_ROOT_PASSWORD: ''
#           MYSQL_DATABASE: circleci
#           - RAILS_ENV=test
#       - image: library/mysql:5.7.17
#           - MYSQL_ALLOW_EMPTY_PASSWORD=true
#           - MYSQL_ROOT_HOST=%
       - image: mysql:5.6
         environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: ''
#            MYSQL_DATABASE: circleci
#             MYSQL_ALLOW_EMPTY_PASSWORD: true
#             MYSQL_USER: root
#             MYSQL_PASSWORD: ''
#             MYSQL_DATABASE: circle_test
#             MYSQL_ROOT_PASSWORD: ''


      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

#      - run: sudo mysql -e 'CREATE DATABASE rails_project_test;'
#      - run: sudo mysql -e "use mysql; CREATE USER 'travis'@'localhost' IDENTIFIED BY ''; GRANT ALL PRIVILEGES ON * . * TO 'travis'@'localhost'; FLUSH PRIVILEGES;"
#      - run: sudo service mysql restart


      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

#      - run:
#          name: Wait for DB
#          # preinstalled in circleci/* docker image
#          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
#      - run:
#          name: MySQL version
#          command: bundle exec ruby mysql_version.rb

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      #new
      # this should be run before db migrations can work
      - run: rails generate devise:install
      - run: rails generate devise user

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: bundle exec rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
#          name: run tests

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results